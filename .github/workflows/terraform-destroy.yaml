name: Destroy Infrastructure

on:
  workflow_dispatch:  # manual trigger only

env:
  AWS_REGION: us-east-1
  S3_BUCKET: terraform-state-spring-boot-app-aantal
  ECR_REPOSITORY: spring-boot-app

jobs:
  destroy:
    name: "Terraform Destroy and Cleanup"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: ECR Images Delete
        run: |
          aws ecr batch-delete-image --region ${{ env.AWS_REGION }} \
            --repository-name ${{ env.ECR_REPOSITORY }} \
            --image-ids "$(aws ecr list-images --region ${{ env.AWS_REGION }} --repository-name ${{ env.ECR_REPOSITORY }} --query 'imageIds[*]' --output json)" || true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.0

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Destroy
        working-directory: ./terraform
        run: terraform destroy -auto-approve

      - name: Delete S3 bucket (Terraform State)
        run: |
          bucket=terraform-state-spring-boot-app
          token=""

          while : ; do
            resp=$(aws s3api list-object-versions \
                      --bucket "$bucket" \
                      --output json \
                      ${token:+--starting-token "$token"})

            del=$(jq '{
                       Objects: ((.Versions     // [])
                              +  (.DeleteMarkers // []))
                              | map({Key,VersionId})
                     }' <<<"$resp")

            [ "$(jq '.Objects|length' <<<"$del")" -eq 0 ] && break
            aws s3api delete-objects --bucket "$bucket" --delete "$del"

            token=$(jq -r '.NextToken // empty' <<<"$resp")
            [ -z "$token" ] && break
          done
          aws s3 rb s3://${{ env.S3_BUCKET }} --force
